<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

// Player Stats
hp = 5;
max_hp = hp;
stamina = 10;
max_stamina = stamina;
level = 1;
expr = 0
max_expr = 2;
attack = 1;

// Get players starting x, y positions for current room
if (instance_exists(obj_player)) {
    player_x_start = obj_player.x;
    player_y_start = obj_player.y;
} else {
    player_x_start = 0;
    player_y_start = 0;
}

// Save previous room
previous_room = room;

// room starting action
room_start_action = NEW_ROOM;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stamina regen alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control Stats

if (hp &lt; 0) hp = 0;

// Stamina Regen
if (stamina &lt; max_stamina and alarm[0] == -1) {
    stamina++;
}

//Pause the Game
if (obj_input.pause_key) {
    // Check if already in the pause room
    if (room != rm_pause) {
        // if player exists, turn persistant off so it doesnt show in pause room
        if (instance_exists(obj_player)) obj_player.persistent = false;
        // Store previous room, turn on room persistence, and go to pause room
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
    } else {
        // exit pause menu and go to previous room
        room_goto(previous_room);
    }
    obj_input.pause_key = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// remember player start position

if (room == rm_pause) exit;

switch (room_start_action) {
    // do nothing on return
    case RETURN:
        break;

    // if new_room or defaulting set the x/y start    
    case NEW_ROOM:
    default:
        if (instance_exists(obj_player)) {
            player_x_start = obj_player.x;
            player_y_start = obj_player.y;
        }
        break;
        
    // load game
    case LOAD:
        scr_load_game();
        break;
}

room_persistent = false;
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw GUI for Stats
draw_set_colour(c_white);

draw_text(100, 32, "Health: " + string(hp) + " / " +  string(max_hp));
draw_text(100, 48, "Stamina: " + string(stamina) + " / " +  string(max_stamina));
draw_text(100, 64, "Level: " + string(level));
draw_text(100, 80, "Exp: " + string(expr) + " / " + string(max_expr));
if (room != rm_pause and instance_exists(obj_player)) draw_text(100, 112, "Player X, Y: " + string(obj_player.x) + ", " + string(obj_player.y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
